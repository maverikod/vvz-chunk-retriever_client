---
description: 
globs: 
alwaysApply: true
---
## 1. Standards

### 1.1. Code Standards
- Each command in a separate file
- Strict typing for all parameters and return values
- Asynchronous command execution
- Unified response format via JSON-RPC
- Standardized error handling

### 1.2. Naming Standards
- snake_case for files and functions
- PascalCase for classes
- UPPER_CASE for constants and documentation files
- Prefix `_` for protected methods
- Prefix `__` for private methods

### 1.3. File Structure Standards
```python
# Section order in command files:
1. Module docstring
2. Imports (standard → third-party → project)
3. Constants and types
4. Result class
5. Helper functions
6. Command
```

### 1.4. Documentation Standards
- **MANDATORY** to maintain documentation in both languages:
  - Russian (directory `/docs/RU/`)
  - English (directory `/docs/EN/`)
- **Russian documentation MUST be an exact copy of the English version:**
  - Identical file structure
  - Identical section structure
  - Identical code examples
  - Identical formatting
  - Identical diagrams and schemas
- Prohibited:
  - Adding documentation in only one language
  - Having differences in structure or content between versions
  - Updating one version without updating the other
- When making changes:
  - Changes are made simultaneously to both versions
  - Version correspondence is verified
  - Commit must contain changes in both versions

### 1.4. Format of configuration files
Format of configuration files - JSON